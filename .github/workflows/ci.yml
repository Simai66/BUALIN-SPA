name: Thai Spa CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-test:
    name: Backend Health Check & Smoke Tests
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create .env file
        run: |
          cat > .env << EOF
          PORT=5000
          NODE_ENV=test
          JWT_SECRET=test-jwt-secret-key-for-ci
          FRONTEND_URL=http://localhost:3000
          
          SMTP_HOST=smtp.gmail.com
          SMTP_PORT=587
          SMTP_SECURE=false
          SMTP_USER=test@thaispa.com
          SMTP_PASS=test-password
          EMAIL_FROM=Thai Spa <noreply@thaispa.com>
          EOF
      
      - name: Run database migrations
        run: npm run migrate
      
      - name: Seed database
        run: npm run seed
      
      - name: Start backend server in background
        run: |
          npm run dev &
          echo $! > server.pid
          sleep 5
      
      - name: Run health checks
        run: npm run health:json > health-report.json
      
      - name: Display health check results
        run: cat health-report.json
      
      - name: Stop backend server
        run: kill $(cat server.pid) || true
      
      - name: Upload health check report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: health-check-report
          path: backend/health-report.json
          retention-days: 30

  frontend-e2e:
    name: Frontend E2E Tests
    runs-on: ubuntu-latest
    needs: backend-test
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci
      
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci
      
      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps chromium
      
      - name: Create backend .env
        working-directory: ./backend
        run: |
          cat > .env << EOF
          PORT=5000
          NODE_ENV=test
          JWT_SECRET=test-jwt-secret-key-for-ci
          FRONTEND_URL=http://localhost:3000
          
          SMTP_HOST=smtp.gmail.com
          SMTP_PORT=587
          SMTP_SECURE=false
          SMTP_USER=test@thaispa.com
          SMTP_PASS=test-password
          EMAIL_FROM=Thai Spa <noreply@thaispa.com>
          EOF
      
      - name: Setup database
        working-directory: ./backend
        run: |
          npm run migrate
          npm run seed
      
      - name: Start backend server
        working-directory: ./backend
        run: |
          npm run dev &
          echo $! > backend.pid
          sleep 5
      
      - name: Run E2E tests
        working-directory: ./frontend
        run: npm run test:e2e
      
      - name: Stop backend server
        working-directory: ./backend
        run: kill $(cat backend.pid) || true
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30
      
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-screenshots
          path: frontend/test-results/
          retention-days: 30

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-e2e]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Build backend
        working-directory: ./backend
        run: |
          npm ci
          npm run build
      
      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build
      
      - name: Upload backend build
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: backend/dist/
      
      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Audit backend dependencies
        working-directory: ./backend
        run: npm audit --audit-level=moderate || true
      
      - name: Audit frontend dependencies
        working-directory: ./frontend
        run: npm audit --audit-level=moderate || true
